@import "../../styles/dependencies";

// Button styles
.button {
  align-items: center;
  background-position: center;
  border: 0;
  border-radius: 40px;
  box-shadow: none;
  color: $primary-color;
  cursor: pointer;
  display: inline-flex;
  font-size: 18px;
  font-weight: 600;
  justify-content: center;
  line-height: 24px;
  outline: 0;
  padding: 16px 24px;
  position: relative;
  text-decoration: none;
  transition: background-color ease 0.3s;
  white-space: nowrap;

  @include hover {
    transition: background-color ease 0.3s, color ease 0.3s;
  }

  &:before {
    display: none;
  }

  &:disabled {
    cursor: default;
    pointer-events: none;
  }

  &__start-icon,
  &__end-icon {
    align-items: center;
    display: inline-flex;
    justify-content: center;
  }

  &__start-icon {
    margin-right: 8px;
  }

  &__end-icon {
    margin-left: 8px;
  }

  svg,
  svg.MuiSvgIcon-root {
    fill: $primary-color;
    height: 20px;
    width: 20px;
    transition: fill ease 0.3s;
  }

  .loader {
    margin-right: 8px;
  }

  // Filled variants
  &--filled {
    // Size variants
    &.button--small {
      font-size: 14px;
      line-height: 20px;
      padding: 10px 16px;
    }

    @mixin filledColorVariant($color, $hover, $transparency) {
      background: $color;

      @include hover {
        background: $hover radial-gradient(circle, transparent 1%, $hover 1%) center/15000%;
      }

      &:active {
        background-color: lighten($hover, $transparency);
        background-size: 100%;
        transition: background 0s;
      }
    }

    &.button--orange {
      @include filledColorVariant($orange, $pink, 5%);
    }

    &.button--purple {
      @include filledColorVariant($purple, $pink, 5%);
      color: $white;

      svg,
      svg.MuiSvgIcon-root {
        fill: $white;
      }
    }

    &.button--transparent {
      @include filledColorVariant(transparent, $pink, 5%);
    }

    &:disabled:not(.button--loading) {
      background: lighten($black, 95%);
      color: lighten($black, 30%);
    }
  }

  // Outlined variants
  &--outlined {
    background: none;
    border-style: solid;
    border-width: 4px;
    padding: 12px 24px;

    // Size variants
    &.button--small {
      border-width: 2px;
      font-size: 14px;
      line-height: 20px;
      padding: 10px 16px;
    }

    @mixin outlinedColorVariant($color, $fill, $transparency) {
      border-color: $color;

      .button__start-icon,
      .button__end-icon {
        svg,
        svg.MuiSvgIcon-root {
          fill: $color;
        }
      }

      @include hover {
        background: $color radial-gradient(circle, transparent 1%, $color 1%) center/15000%;
        border-color: $color;

        .button__start-icon,
        .button__end-icon {
          svg,
          svg.MuiSvgIcon-root {
            fill: $fill;
          }
        }
      }

      &:active {
        background-color: lighten($color, $transparency);
        background-size: 100%;
        transition: background 0s;
      }
    }

    &.button--orange {
      @include outlinedColorVariant($orange, $purple, 5%);
    }

    &.button--light {
      color: $white;

      @include hover {
        color: $purple;

        .button__start-icon,
        .button__end-icon {
          svg,
          svg.MuiSvgIcon-root {
            fill: $purple;
          }
        }
      }
    }

    &:disabled {
      background: lighten($black, 95%);
      border-color: lighten($black, 75%);
      color: lighten($black, 30%);

      svg,
      svg.MuiSvgIcon-root {
        fill: lighten($black, 30%);
      }
    }
  }

  // Variants
  &--link {
    background: none;
    padding: 0;

    .button__content {
      position: relative;

      &:before {
        background: $orange;
        border-radius: 2px;
        bottom: -2px;
        display: inline-block;
        content: "";
        height: 2px;
        left: 0;
        opacity: 0;
        position: absolute;
        transition: width ease 0.2s, opacity ease 0.3s;
        width: 0;
      }
    }

    @include hover {
      .button__content:before {
        opacity: 1;
        width: 100%;
      }
    }
  }
}
